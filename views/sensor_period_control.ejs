<!DOCTYPE html>
<html>
  <head>
    <title>Dashboard</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel='stylesheet' href='/stylesheets/bootstrap-3.3.7.min.css' />
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body class="base-bg">
  <div class="top-wrapper">
    <div class="container top-panel">
      <div class="top-left">
        <h3>IoT-SNN DashBoard</h3>
        <ul class="top-menu">
          <li><a href="/">Dashboard</a></li>
          <li><a href="/spc">Sensor Period Control</a></li>
          <li><a href="/testbed">Testbed configuration</a></li>
        </ul>
      </div>
      <div class="top-right">
        <label id="btn-reset" style="margin-left: 15px; cursor: pointer;">Reset</label>
        <label id="currentTime"><%= recentlyTime %></label>
      </div>
    </div>
  </div>
  <div class="wrapper">
    <div class="container">
      <div class="row">
        <div class="col-sm-12">
          <div class="ibox">
            <div class="ibox-title">
              <h5>Sensor Period Control<br/><small>(Temperature and Humidity)</small></h5>
            </div>
            <div class="ibox-content">
              <div id="chart-th" style="height: 410px;"></div>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-sm-12">
          <div class="ibox">
            <div class="ibox-title">
              <h5>Sensor Period Control<br/><small>(Power Reduction Ratio)</small></h5>
            </div>
            <div class="ibox-content">
              <div id="chart-prr" style="height: 410px;"></div>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-sm-12">
          <div class="ibox">
            <div class="ibox-title">
              <h5>Sensor Period Control<br/><small>(pm025 and pm100)</small></h5>
            </div>
            <div class="ibox-content">
              <div id="chart-pm" style="height: 410px;"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="/javascripts/jquery-1.12.4.min.js"></script>
  <script src="/javascripts/bootstrap-3.3.7.min.js"></script>
  <script src="/javascripts/echart-4.4.0.min.js"></script>
  <script>
    let loop = null;

    $(document).ready(function() {

      // Reset
      $('#btn-reset').on('click', function(e) {
        e.preventDefault();
        $.ajax({
          type: "POST",
          url: "/reset",
          success: function(result) {
            if (result.result) {
              alert("초기화 완료");
              window.location.reload();
            }
          }
        });
      });

      // Data
      const series_th = JSON.parse('<%- series_th %>');
      const series_prr = JSON.parse('<%- series_prr %>');
      const series_pm = JSON.parse('<%- series_pm %>');
      const legend_th = series_th.map(function(elem) {
        return elem.name;
      });
      const legend_pm = series_pm.map(function(elem) {
        return elem.name;
      });

      // Chart TH
      const chartTH = echarts.init(document.getElementById('chart-th'));
      const chartTH_opt = {
        xAxis: [{
          type: "time",
          data: null
        }],
        yAxis: [{
          type: "value",
          name: "Temp",
          // scale: true
        }, {
          type: "value",
          name: "Humidity",
          min: 0,
          max: 100
        }],
        legend: {
          padding: [0, 100, 0, 100],
          textStyle: {
            fontSize: 11,
          },
          data: legend_th
        },
        tooltip: {
          trigger: 'axis',
          axisPointer: {
            type: "cross"
          },
          padding: [10, 20],
          formatter: function (params, ticket, callback) {
            return "temp : " + params[0].value[1] + "<br/>predict temp : " + params[2].value[1] + "<br/><br/>humidity : " + params[1].value[1] + "<br/>predict humidity : " + params[3].value[1];
          }
        },
        dataZoom: [{
          type: 'slider',
          start: 0,
          end: 100
        }],
        series: series_th,
        color: ["#bdbdbd", "#bdbdbd", "#d32f2f", "#303f9f"]
      };
      chartTH.setOption(chartTH_opt);

      // Chart Power Reduction Ratio
      const chartPrr = echarts.init(document.getElementById('chart-prr'));
      const chartPrr_opt = {
        xAxis: [{
          type: "time",
          data: null
        }],
        yAxis: [{
          name: "(%)",
          type: "value",
          scale: true,
        }],
        legend: {
          padding: [0, 100, 0, 100],
          textStyle: {
            fontSize: 11,
          },
          data: ["Power Reduction Ratio"]
        },
        tooltip: {
          trigger: 'axis',
          axisPointer: {
            type: "cross"
          },
          padding: [10, 20],
          formatter: function (params, ticket, callback) {
            return "Ratio : " + params[0].value[1];
          }
        },
        dataZoom: [{
          type: 'slider',
          start: 0,
          end: 100
        }],
        series: series_prr,
        color: ["#2CC185"]
      };
      chartPrr.setOption(chartPrr_opt);

      // Chart PM
      const chartPM = echarts.init(document.getElementById('chart-pm'));
      const chartPM_opt = {
        xAxis: [{
          type: "time",
          data: null
        }],
        yAxis: [{
          type: "value",
          scale: true,
        }],
        legend: {
          padding: [0, 100, 0, 100],
          textStyle: {
            fontSize: 11,
          },
          data: legend_pm
        },
        tooltip: {
          trigger: 'axis',
          axisPointer: {
            type: "cross"
          },
          padding: [10, 20],
          formatter: function (params, ticket, callback) {
            return "pm100 : " + params[1].value[1] + "<br/>p_pm100 : " + params[3].value[1] + "<br/><br/>pm025 : " + params[0].value[1] + "<br/>p_pm025 : " + params[2].value[1];
          }
        },
        dataZoom: [{
          type: 'slider',
          start: 0,
          end: 100
        }],
        series: series_pm,
        color: ["#bdbdbd", "#bdbdbd", "#d32f2f", "#303f9f"]
      };
      chartPM.setOption(chartPM_opt);

      loop = setInterval(function() {
        $.get("/next/spc", function(result) {
          chartTH.setOption({ series: result.series_th });
          chartPrr.setOption({ series: result.series_prr });
          chartPM.setOption({ series: result.series_pm });
          $('#currentTime').text(result.recentlyTime);
        });
      }, 10000);

    });
  </script>
  </body>
</html>